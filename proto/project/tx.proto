syntax = "proto3";
package project;

import "gogoproto/gogo.proto";
import "project/project.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/x/project/types";

// To get a list of all module messages, go to your module's handler.go and
// check all cases in NewHandler().
service Msg {
  rpc CreateProject(MsgCreateProject) returns (MsgCreateProjectResponse);
  rpc UpdateProjectStatus(MsgUpdateProjectStatus) returns (MsgUpdateProjectStatusResponse);
  rpc CreateAgent(MsgCreateAgent) returns (MsgCreateAgentResponse);
  rpc UpdateAgent(MsgUpdateAgent) returns (MsgUpdateAgentResponse);
  rpc CreateClaim(MsgCreateClaim) returns (MsgCreateClaimResponse);
  rpc CreateEvaluation(MsgCreateEvaluation) returns (MsgCreateEvaluationResponse);
  rpc WithdrawFunds(MsgWithdrawFunds) returns (MsgWithdrawFundsResponse);
  rpc UpdateProjectDoc(MsgUpdateProjectDoc) returns (MsgUpdateProjectDocResponse);
}

message MsgCreateProject {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash     = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did  = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  string pub_key     = 4 [(gogoproto.jsontag) = "pubKey", (gogoproto.moretags) = "yaml:\"pubKey\""];
  bytes data         = 5 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgCreateProjectResponse {}

message MsgUpdateProjectStatus {
  string tx_hash              = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did           = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did          = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  UpdateProjectStatusDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgUpdateProjectStatusResponse{}

message MsgCreateAgent {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  CreateAgentDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgCreateAgentResponse {}

message MsgUpdateAgent {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  UpdateAgentDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgUpdateAgentResponse {}

message MsgCreateClaim {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  CreateClaimDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgCreateClaimResponse {}

message MsgCreateEvaluation {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash           = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did        = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did       = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  CreateEvaluationDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgCreateEvaluationResponse {}

message MsgWithdrawFunds {
  option (gogoproto.goproto_stringer) = false;

  string sender_did     = 1 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  WithdrawFundsDoc data = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgWithdrawFundsResponse {}

message MsgUpdateProjectDoc {
  string tx_hash     = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did  = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  bytes data         = 4 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.moretags) = "yaml:\"data\""];
}

message MsgUpdateProjectDocResponse {}
